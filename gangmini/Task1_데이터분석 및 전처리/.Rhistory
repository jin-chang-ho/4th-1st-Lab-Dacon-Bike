library(ggplot2)
bike<-read.csv("E:/단국대학교/Dacon_ddareung/train.csv")
head(bike)
col_name <- colnames(bike)
col_name[2]
########데이터 load########
bike<-read.csv("D:/단국대학교/Dacon_ddareung/dataset_0606/train.csv")
########데이터 load########
bike<-read.csv("D:/단국대학교/Dacon_ddareung/dataset_0606/train.csv")
head(bike)
col_name <- colnames(bike)
col_name[2]
######미세먼지 농도 범주형 feature 만들기#######
precipitation_label <- c()
for(i in c(1:nrow(bike))){
if(is.na(bike[i,"precipitation"])){
precipitation_label[i] <- NA
}else if(bike[i,"precipitation"] < 3){
precipitation_label[i] <- 1
}else if(3 <= bike[i,"precipitation"] < 15){
precipitation_label[i] <- 2
}else if(15 <= bike[i,"precipitation"] < 30){
precipitation_label[i] <- 3
}else if(bike[i,"precipitation"] >= 30){
precipitation_label[i] <- 4
}
}
######미세먼지 농도 범주형 feature 만들기#######
precipitation_label <- c()
for(i in c(1:nrow(bike))){
if(is.na(bike[i,"precipitation"])){
precipitation_label[i] <- NA
}else if(bike[i,"precipitation"] < 3){
precipitation_label[i] <- 1
}else if(3 <= bike[i,"precipitation"] && bike[i,"precipitation"]< 15){
precipitation_label[i] <- 2
}else if(15 <= bike[i,"precipitation"] && bike[i,"precipitation"] < 30){
precipitation_label[i] <- 3
}else if(bike[i,"precipitation"] >= 30){
precipitation_label[i] <- 4
}
}
precipitation_label
nrow(precipitation_label)
ncol(precipitation_label)
length(precipitation_label)
bike[ , "precipitation_label" ] <-precipitation_label
bike
######미세먼지 농도 범주형 feature 만들기#######
PM10_label <- c()
PM2.5_label <- c()
for(i in c(1:nrow(bike))){
if(is.na(bike[i,"PM10"])){
PM10_label[i] <- NA
}else if(0 <= bike[i,"PM10"] && bike[i,"PM10"] <= 30){
PM10_label[i] <- 1
}else if(31 <= bike[i,"PM10"] && bike[i,"PM10"] <= 80){
PM10_label[i] <- 2
}else if(81 <= bike[i,"PM10"] && bike[i,"PM10"] <= 150){
PM10_label[i] <- 3
}else if(151 <= bike[i,"PM10"]){
PM10_label[i] <- 4
}
}
for(i in c(1:nrow(bike))){
if(is.na(bike[i,"PM2.5"])){
PM2.5_label[i] <- NA
}else if(0 <= bike[i,"PM2.5"] && bike[i,"PM2.5"] <= 15){
PM2.5_label[i] <- 1
}else if(16 <= bike[i,"PM2.5"] && bike[i,"PM2.5"] <= 35){
PM2.5_label[i] <- 2
}else if(36 <= bike[i,"PM2.5"] && bike[i,"PM2.5"] <= 75){
PM2.5_label[i] <- 3
}else if(76 <= bike[i,"PM2.5"]){
PM2.5_label[i] <- 4
}
}
bike[ , "PM10_label" ] <-PM10_label
bike[ , "PM2.5_label" ] <-PM2.5_label
bike
write.csv(bike,"D:/단국대학교/Dacon_ddareung/Task1_데이터분석 및 전처리/train_0606.csv")
########데이터 load########
bike<-read.csv("E:/단국대학교/Dacon_ddareung/dataset_0606/train.csv")
head(bike)
col_name <- colnames(bike)
col_name[2]
########데이터 load########
bike<-read.csv("E:/단국대학교/Dacon_ddareung/Task1_데이터분석 및 전처리/train_0606/train.csv")
head(bike)
col_name <- colnames(bike)
########데이터 load########
bike<-read.csv("E:/단국대학교/Dacon_ddareung/Task1_데이터분석 및 전처리/train_0606.csv")
head(bike)
########데이터 load########
bike<-read.csv("D:/단국대학교/Dacon_ddareung/Task1_데이터분석 및 전처리/train_0606.csv")
head(bike)
col_name <- colnames(bike)
col_name[2]
######정규화######
# 수치형 데이터만 범주화 (rental 제외)
std <- function(x){
return((x-min(x)) / (max(x)-min(x)))
}
normalize_bike <- apply(bike[2:12],2,std)
normalize_bike
normalize_bike <- std(bike["precipitation"])
normalize_bike
bike
normalize_bike <- std(bike["temp_mean"])
normalize_bike
