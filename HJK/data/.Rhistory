for(i in 1:12) {
boxplot(train.raw[,i])
}
for(i in 1:12) {
boxplot(train.no_date[,i])
}
par(mfrow=c(1,1))
par(mfrow=c(2, 6))
for(i in 1:12) {
boxplot(train.no_date[,i])
}
par(mfrow=c(3, 4))
for(i in 1:12) {
boxplot(train.no_date[,i])
}
par(mfrow=c(3, 4))
for(i in 1:12) {
boxplot(train.no_date[,i],
xlab = colnames(train.no_date)[i])
}
par(mfrow=c(1,1))
par(mfrow=c(3, 4))
for(i in 1:12) {
hist(train.no_date[,i],
main=colnames(train.no_date)[i])
}
par(mfrow=c(1,1))
par(mfrow=c(3, 4))
for(i in 1:12) {
plot(train.raw[,1], train.no_date[i],
xlab="date",
ylab=colnames(train.no_date)[i])
}
train.omit_na <- na.omit(train.raw)
train.replace_na_0 <- train.raw
train.replace_na_0[!complete.cases(train.replace_na_0)] <- 0
train.replace_na_0[!complete.cases(train.replace_na_0),] <- 0
par(mfrow=c(3, 4))
for(i in 1:12) {
plot(train.raw[,1], train.no_date[i],
xlab="date",
ylab=colnames(train.no_date)[i])
}
plot(train.replace_na_0[,1], train.no_date[i],
xlab="date",
ylab=colnames(train.no_date)[i])
View(train.replace_na_0)
replace <- function(x) {
x[is.na(x)] <- 0
return(x)
}
apply(train.replace_na_0, 2, replace)
train.replace_na_0 <- apply(train.raw, 2, replace)
View(train.replace_na_0)
str(train.replace_na_0)
train.replace_na_0 <- data.frame(train.replace_na_0)
View(train.replace_na_0)
str(train.raw)
str(train.replace_na_0)
par(mfrow=c(3, 4))
for(i in 1:12) {
plot(train.replace_na_0[,1], train.no_date[i],
xlab="date",
ylab=colnames(train.no_date)[i])
}
barplot(train.replace_na_0[,1], train.no_date[i],
xlab="date",
ylab=colnames(train.no_date)[i])
train.replace_na_0 <- apply(train.no_date, 2, replace)
train.replace_na_0 <- data.frame(train.replace_na_0)
par(mfrow=c(3, 4))
for(i in 1:12) {
barplot(train.raw[,1], train.replace_na_0[i],
xlab="date",
ylab=colnames(train.no_date)[i])
}
View(train.replace_na_0)
str(train.replace_na_0)
summary(train.replace_na_0)
par(mfrow=c(1,1))
plot(train.raw[,1],
train.raw[,13],
type="l",
main="대여량 통계",
lty=1,
lwd=1,
xlab="date",
ylab="rental cnt")
train.date_fix <- apply(train.raw[,1], 2, as.Date)
as.Date(train.raw[1,1])
class(as.Date(train.raw[1,1]))
lapply(train.raw[,1], as.Date)
train.date_type <- lapply(train.raw[,1], as.Date)
chr(train.date_type)
str(train.date_type)
train.new <- train.raw
train.new[,1] <- lapply(train.raw[,1], as.Date)
str(train.new)
ggplot(data=train.new, aes(x=date, y=rental)) +
geom_line(col="red")
ggplot(data=train.new, aes(x=date, y=rental)) +
geom_line(col="red")
library(ggplot2)
ggplot(data=train.new, aes(x=date, y=rental)) +
geom_line(col="red")
ggplot(data=train.raw, aes(x=date, y=rental)) +
geom_line(col="red")
ggplot(data=train.new, aes(x=date, y=rental)) +
geom_line(col="red")
ggplot(train.raw, aes(x=date, y=rental))+
geom_line() +
geom_point(size=6, shape=19, alpha=0.5)+
scale_x_continuous(breaks=1:24,
labels=1:24)
str(train.raw)
par(mfrow=c(3, 4))
for(i in 1:12) {
boxplot(train.no_date[,i],
main=colnames(train.no_date)[i])
}
par(mfrow=c(1,1))
par(mfrow=c(3, 4))
for(i in 1:12) {
hist(train.no_date[,i],
main=colnames(train.no_date)[i])
}
par(mfrow=c(1,1))
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
train.normalize <- as.data.frame(lapply(train.raw[,-1], normalize))
View(train.normalize)
par(mfrow=c(3, 4))
for(i in 2:13) {
boxplot(train.normalize[,i],
main=colnames(train.no_date)[i])
}
par(mfrow=c(1,1))
par(mfrow=c(3, 4))
for(i in 2:13) {
hist(train.normalize[,i],
main=colnames(train.no_date)[i])
}
par(mfrow=c(1,1))
str(train.normalize)
par(mfrow=c(3, 4))
for(i in 1:12) {
boxplot(train.normalize[,i],
main=colnames(train.no_date)[i])
}
par(mfrow=c(1,1))
par(mfrow=c(3, 4))
for(i in 1:12) {
hist(train.normalize[,i],
main=colnames(train.no_date)[i])
}
par(mfrow=c(1,1))
summary(train.normalize)
summary(train.raw)
install.packages("naniar")
vis_miss(train.raw)
library(naniar)
vis_miss(train.raw)
train.no_na <- train.raw[complete.cases(train.raw)]
train.no_na <- train.raw[,complete.cases(train.raw)]
train.no_na <- train.raw[complete.cases(train.raw),]
View(train.no_na)
str(train.no_na)
View(train.no_na)
setwd("C:/Users/HJK/Desktop/lab/Dacon_Seoul_Bike/HJK/data")
train.raw <- read.csv("train.csv", stringsAsFactors=F)
test.raw <- read.csv("test.csv", stringsAsFactors=F)
library(ggplot2)
library(naniar)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
replace <- function(x) {
x[is.na(x)] <- 0
return(x)
}
train.normalize <- as.data.frame(lapply(train.raw[,-c(1, 2, )], normalize))
train.no_date <- train.raw[,-1]
train.no_na <- train.raw[complete.cases(train.raw),]
par(mfrow=c(1,1))
# 데이터
train.normalize_no_na <- as.data.frame(lapply(train.no_na[,-c(1, 2, )], normalize))
# 데이터
train.normalize_no_na <- as.data.frame(lapply(train.no_na[,-1], normalize))
View(train.normalize_no_na)
# 결측치 포함 행 제거 후 훈련
hist(train.normalize_no_na)
hist(train.no_date[,i],
main=colnames(train.normalize_no_na)[i])
# 결측치 포함 행 제거 후 훈련
par(mfrow=c(3, 4))
for(i in 1:12) {
hist(train.no_date[,i],
main=colnames(train.normalize_no_na)[i])
}
par(mfrow=c(1,1))
str(train.normalize_no_na)
# 결측치 포함 행 제거 후 훈련
par(mfrow=c(3, 4))
for(i in 1:12) {
hist(train.normalize_no_na[,i],
main=colnames(train.normalize_no_na)[i])
}
par(mfrow=c(1,1))
cor(train.normalize_no_na)
cor(train.normalize_no_na)
cor(train.normalize_no_na)
pairs(train.normalize_no_na)
install.packages("psych")
library(psych)
pairs.panels(train.normalize_no_na)
ins_model <- lm(rental~., data=train.normalize_no_na)
ins_model
summary(ins_model)
mean(train.raw$precipitation, trim=0.1, na.rm=T)
mean(train.raw$precipitation, trim=0.2, na.rm=T)
summary(train.raw)
plot(train.no_na$date, train.no_na$rental)
plot(train.no_na$date, train.no_na$rental, breaks=5)
barplot(precipitation~date, data=train.no_na)
cor(train.no_na)
cor(train.no_na[-1])
cor(train.no_na[,-1])
pairs(train.no_na[,-1])
pairs.panels(train.no_na[,-1])
ins_model <- lm(rental~., data=train.no_na[-1])
ins_model
summary(ins_model)
train.no_na2 <- train.no_na2
train.no_na2 <- train.no_na
train.no_na2$precipitation <- train.no_na2$precipitation^2
train.no_na2 <- train.no_na
train.no_na2$precipitation2 <- train.no_na2$precipitation^2
ins_model <- lm(rental~., data=train.no_na[,-1])
ins_model
summary(ins_model)
train.no_na2 <- train.no_na
train.no_na2$precipitation2 <- train.no_na2$precipitation^2
ins_model2 <- lm(rental~., data=train.no_na2[,-1])
summary(ins_model2)
train.no_na2$pred <- predict(ins_model2, train.no_na2[,-1])
cor(train.no_na2$pred, train.no_na2$rental)
plot(train.no_na2$pred, train.no_na2$rental)
abline(a=0, b=1, col="red", lwd=3, lty=2)
test.no_na <- test.raw[complete.cases(test.raw),]
pred <- predict(ins_model2, test.no_na[,-1])
test.no_na$precipitation2 <- test.no_na$precipitation^2
pred <- predict(ins_model2, test.no_na[,-1])
cor(pred, test.no_na$rental)
test.no_na$pred <- predict(ins_model2, test.no_na[,-1])
cor(test.no_na$pred, test.no_na$rental)
View(test.no_na)
View(train.no_na2)
View(test.no_na)
str(test.no_na)
str(train.no_na2)
View(test.no_na)
train.no_na <- train.raw[complete.cases(train.raw),]
View(train.no_na)
train <- train.no_na[1:280, ]
test <- train.no_na[281:386,]
install.packages("rpart")
library(rpart)
m.rpart <- rpart(rental~., data=train[,-1])
m.rpart
summary(m.rpart)
install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(m.rpart, digits=3)
p.rpart <- predict(m.rpart, test[,-1])
summary(p.rpart)
summary(test$rental)
cor(p.rpart, test$rental)
MAE <- function(actual, predicted) {
mean(abs(actual - predicted))
}
MAE(p.rpart, test$rental)
MAE(test$rental, p.rpart)
MAE(p.rpart, test$rental)
mean(test$rental)
MAE(65142.05, test$rental)
install.packages("cvTools")
install.packages("MASS")
library(MASS)
# 실험
model <- lm(rental~., data=train.no_na[,-1])
model2 <- stepAIC(model)
model2
summary(model2)
summary(model)
summary(model2)
# 정규화 후 회귀
train.clean_norm <- as.data.frame(lapply(train.no_na[,-1], normalize))
cor(train.clean_norm[,-1])
pairs(train.clean_norm[,-1])
pairs.panels(train.clean_norm[,-1])
ins_model <- lm(rental~., data=train.clean_norm[,-1])
ins_model
summary(ins_model)
barplot(precipitation~date, data=train.clean_norm)
train.clean_norm$precipitation2 <- train.clean_norm$precipitation^2
ins_model2 <- lm(rental~., data=train.clean_norm[,-1])
summary(ins_model2)
train.clean_norm$pred <- predict(ins_model2, train.clean_norm[,-1])
cor(train.no_na2$pred, train.no_na2$rental)
cor(train.clean_norm$pred, train.clean_norm$rental)
plot(train.clean_norm$pred, train.clean_norm$rental)
abline(a=0, b=1, col="red", lwd=3, lty=2)
model <- lm(rental~. data=train.clean_norm[,-1])
model2 <- stepAIC(model)
model2
summary(model)
summary(model2)
# 결측값 제거를 위한 실험
training <- function(df) {
ins_model <- lm(rental~., data=df)
print(ins_model)
summary(ins_model)
df$precipitation2 <- df$precipitation^2
ins_model2 <- lm(rental~., data=df)
summary(ins_model2)
df$pred <- predict(ins_model2, df)
print(cor(df$pred, df$rental))
plot(df$pred, df$rental)
abline(a=0, b=1, col="red", lwd=3, lty=2)
model <- lm(rental~. data=df)
model2 <- stepAIC(model)
}
# 결측값 제거를 위한 실험
training <- function(df) {
ins_model <- lm(rental~., data=df)
print(ins_model)
summary(ins_model)
df$precipitation2 <- df$precipitation^2
ins_model2 <- lm(rental~., data=df)
summary(ins_model2)
df$pred <- predict(ins_model2, df)
print(cor(df$pred, df$rental))
plot(df$pred, df$rental)
abline(a=0, b=1, col="red", lwd=3, lty=2)
model <- lm(rental~. data=df)
model2 <- stepAIC(model)
}
# 결측값 제거를 위한 실험
training <- function(df) {
ins_model <- lm(rental~., data=df)
print(ins_model)
summary(ins_model)
df$precipitation2 <- df$precipitation^2
ins_model2 <- lm(rental~., data=df)
summary(ins_model2)
df$pred <- predict(ins_model2, df)
print(cor(df$pred, df$rental))
plot(df$pred, df$rental)
abline(a=0, b=1, col="red", lwd=3, lty=2)
model <- lm(rental~., data=df)
model2 <- stepAIC(model)
}
training(train.clean_norm[,-1])
# 결측값 제거를 위한 실험
training <- function(df) {
ins_model <- lm(rental~., data=df)
print(ins_model)
summary(ins_model)
df$precipitation2 <- df$precipitation^2
ins_model2 <- lm(rental~., data=df)
summary(ins_model2)
df$pred <- predict(ins_model2, df)
print(cor(df$pred, df$rental))
plot(df$pred, df$rental)
abline(a=0, b=1, col="red", lwd=3, lty=2)
model <- lm(rental~., data=df)
model2 <- stepAIC(model)
summary(model)
summary(model2)
}
df <- train.raw
str(df)
df[,1] <- as.Date(df[,1])
str(df)
df$weekday <- weekdays(df$date)
df
str(df)
df$weekday <- factor(df$weekday %in% c('토요일','일요일'), labels=c('평일','주말'))
df.head()
head(df)
plot(date, rental)
plot(df$date, df$rental)
training(df)
cor(df)
cor(df[-1])
cor(df[,-1])
str(df)
plot(df$date, df$sunshine_rate)
df$season <- month(df$date)
install.packages("lubridate")
library(lubridate)
df$season <- month(df$date)
str(df)
plot(df$date, df$rental)
plot(df$date, df$rental, lty=1)
plot(df$date, df$rental, type=b)
plot(df$date, df$rental, type='b')
plot(df$date, df$rental, type='l')
cor(df, na.rm=T)
vis_miss(train.raw)
head(df)
df$season <- ifelse(df$season %in% c(3, 4, 5), "봄",
ifelse(df$season %in% c(6, 7, 8), "여름",
ifelse(df$season %in% c(9, 10, 11), "가을", "겨울")))
head(df)
str(df)
df$season <- as.factor(df$season)
str(df)
levels(df$season)
df$season <- as.factor(df$season, levels=c("봄","여름","가을","겨울울"))
df$season <- as.factor(df$season)
df$season <- factor(df$season, levels=c("봄","여름","가을","겨울"))
str(df)
agg <- subset(df, by="season", mean)
agg <- aggregate(df, by="season", mean)
agg <- aggregate(df, by=list(season=df$season), mean)
agg <- aggregate(df, by=list(season=df$season), mean, na.rm=T)
agg
mean(df$precipitation, na.rm=T)
str(df)
summary(df)
agg <- aggregate(df, by=list(season=df$season), median, na.rm=T)
agg
agg <- aggregate(df[-c('date','weekday','season')], by=list(season=df$season), median, na.rm=T)
agg <- aggregate(df[,-c('date','weekday','season')], by=list(season=df$season), median, na.rm=T)
agg <- aggregate(df[-c('date','weekday','season'),], by=list(season=df$season), median, na.rm=T)
agg <- aggregate(df[, -c('date','weekday','season')], by=list(season=df$season), median, na.rm=T)
agg <- aggregate(subset(df, select=-c(date, weekday, season)), by=list(season=df$season), median, na.rm=T)
agg
agg <- aggregate(subset(df, select=-c(date, weekday, season)), by=list(season=df$season), mean, na.rm=T)
agg
agg <- aggregate(subset(df, select=-c(date, weekday, season)), by=list(season=df$season), mean, na.rm=T, trim=0.2)
agg
agg <- aggregate(subset(df, select=-c(date, weekday, season)), by=list(season=df$season), mean, na.rm=T, trim=0.1)
agg
agg <- aggregate(subset(df, select=-c(date, weekday, season)), by=list(season=df$season), mean, na.rm=T)
agg
agg[1, 1]
agg[1, 2]
agg$precipitation
agg$precipitation[1]
df[!complete.cases(df)]
df[,!complete.cases(df)]
df[!complete.cases(df),]
df[!complete.cases(df),'season']
df[!complete.cases(df),"precipitation"] <- ifelse(df[!complete.cases(df),"season"]=="봄", agg$precipitation[1],
ifelse(df[!complete.cases(df),"season"]=="여름", agg$precipitation[2],
ifelse(df[!complete.cases(df),"season"]=="가을", agg$precipitation[3], agg$precipitation[4])))
str(df)
summary(df)
df[!complete.cases(df),"PM10"] <- ifelse(df[!complete.cases(df),"season"]=="봄", agg$PM10[1],
ifelse(df[!complete.cases(df),"season"]=="여름", agg$PM10[2],
ifelse(df[!complete.cases(df),"season"]=="가을", agg$PM10[3], agg$PM10[4])))
df[!complete.cases(df),"PM2.5"] <- ifelse(df[!complete.cases(df),"season"]=="봄", agg$PM2.5[1],
ifelse(df[!complete.cases(df),"season"]=="여름", agg$PM2.5[2],
ifelse(df[!complete.cases(df),"season"]=="가을", agg$PM2.5[3], agg$PM2.5[4])))
df[!complete.cases(df),"sunshine_sum"] <- ifelse(df[!complete.cases(df),"season"]=="봄", agg$sunshine_sum[1],
ifelse(df[!complete.cases(df),"season"]=="여름", agg$sunshine_sum[2],
ifelse(df[!complete.cases(df),"season"]=="가을", agg$sunshine_sum[3], agg$sunshine_sum[4])))
summary(df)
training(df)
ins_model2
model3
model2
View(df)
View(df)
ins_model <- lm(rental~., data=df)
print(ins_model)
summary(ins_model)
df_tmp <- df
df_tmp$precipitation2 <- df$precipitation^2
model <- lm(rental~., data=df_tmp)
model2 <- stepAIC(model)
summary(model)
summary(model2)
model <- lm(rental~., data=df)
model2 <- stepAIC(model)
summary(model)
summary(model2)
model <- lm(rental~., data=df_tmp)
model2 <- stepAIC(model)
summary(model)
summary(model2)
df_tmp$pred <- predict(model2, df_tmp)
print(cor(df$pred, df$rental))
cor(df$pred, df$rental)
View(df_tmp)
cor(df_tmp$pred, df_tmp$rental)
plot(df$pred, df$rental)
plot(df_tmp$pred, df_tmp$rental)
abline(a=0, b=1, col="red", lwd=3, lty=2)
write.csv(df, file="data/new_data.csv")
write.csv(df, file="new_data.csv")
write.csv(df_tmp, file="new_data2.csv")
write.csv(df, file="new_data.csv", row.names=T, col.names=F)
write.csv(df, file="new_data.csv", row.names=T)
write.csv(df, file="new_data.csv", row.names=F)
r <- read.csv("new_data.csv")
head(r)
head(df)
write.csv(df_tmp, file="new_data2.csv", row.names=F)
